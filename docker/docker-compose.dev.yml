version: "3.5"
services:
  api1: &api
    build:
      context: ..
      dockerfile: docker/Dockerfile.dev
    hostname: api1
    container_name: api1-rb
    depends_on:
      postgres:
        condition: service_healthy
    network_mode: host
    env_file:
      - .env
    environment:
      SERVER_PORT: 8080
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "500MB"
    healthcheck:
      test: ["CMD-SHELL", "true"]
      start_interval: 3s
      retries: 1
      interval: 5s
      timeout: 2s

  api2:
    <<: *api
    hostname: api2
    container_name: api2-rb
    environment:
      SERVER_PORT: 8081

  nginx:
    image: nginx:alpine
    container_name: nginx-rb
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      api1:
        condition: service_healthy
      api2:
        condition: service_healthy
    network_mode: host
    deploy:
      resources:
        limits:
          cpus: "0.20"
          memory: "50MB"

  postgres:
    image: postgres:16.2
    container_name: postgres-rb
    environment:
      POSTGRES_DB: rinhadb
      POSTGRES_USER: rinha
      POSTGRES_PASSWORD: rinha
    network_mode: host

    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./postgresql.conf:/docker-entrypoint-initdb.d/postgresql.conf

    command: postgres -c config_file=/docker-entrypoint-initdb.d/postgresql.conf

    deploy:
      resources:
        limits:
          cpus: "0.50"
          memory: "300MB"

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rinha -d rinhadb -h localhost -p 5432"]
      start_interval: 25s
      retries: 3
      interval: 45s
      timeout: 2s

volumes:
  postgres-data: